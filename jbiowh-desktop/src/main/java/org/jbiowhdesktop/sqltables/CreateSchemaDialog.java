package org.jbiowhdesktop.sqltables;

import java.awt.Frame;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DocumentFilter;
import org.jbiowhcore.logger.VerbLogger;
import org.jbiowhdbms.dbms.JBioWHDBMS;
import org.jbiowhdbms.dbms.WHDBMSFactory;
import org.jbiowhdbms.dbms.mysql.WHMySQL;
import org.jbiowhdesktop.component.dialog.progress.ProgressDialog;
import org.jbiowhdesktop.component.file.FileChooser;
import org.jbiowhdesktop.component.panel.result.ResultPanelFactory;
import org.jbiowhdesktop.component.panel.sql.SQLEditorPanel;

/**
 * This JDialog is
 *
 * $Author: r78v10a07@gmail.com $ $LastChangedDate: 2012-10-03 22:11:05 +0200
 * (Wed, 03 Oct 2012) $ $LastChangedRevision: 396 $
 * @since Jul 31, 2012
 */
public class CreateSchemaDialog extends javax.swing.JDialog {

    private ProgressDialog dialog;

    /**
     * Creates new form CreateSchemaDialog
     *
     * @param parent the parent Component
     * @param modal true to keep front its parent
     * @param wHDBMSFactory the JBioWHPersistence factory
     */
    public CreateSchemaDialog(java.awt.Frame parent, boolean modal, WHDBMSFactory wHDBMSFactory) {
        super(parent, modal);
        this.parent = parent;
        this.wHDBMSFactory = wHDBMSFactory;
        initComponents();
        loadDefaultScript();
        dialog = new ProgressDialog(null, false);
        dialog.setLocationRelativeTo(parent);
    }

    private void loadDefaultScript() {
        System.out.println("1");
        if (wHDBMSFactory.isJbiowhSchema()) {
            System.out.println("2");
            if (wHDBMSFactory instanceof WHMySQL) {
                try {
                    System.out.println("3");
                    InputStream inp = ClassLoader.getSystemClassLoader().getResourceAsStream("schema/mysql/warehouse.sql");
                    System.out.println("4");
                    try (BufferedReader reader = new BufferedReader(new InputStreamReader(inp))) {
                        System.out.println("5");
                        sQLEditorPanel = new SQLEditorPanel(jTabbedPane1, wHDBMSFactory);
                        System.out.println("6");
                        sQLEditorPanel.getDoc().setDocumentFilter(new DocumentFilter());
                        sQLEditorPanel.openSQLFile(reader);
                        System.out.println("7");
                        sQLEditorPanel.setVisible();
                        System.out.println("8");
                        jBCreate.setEnabled(true);
                        System.out.println("9");
                        jBLoad.setVisible(false);
                        System.out.println("10");
                        jBCancel.setText("Cancel");
                        System.out.println("11");
                    }
                } catch (IOException ex) {
                    VerbLogger.getInstance().setLevel(VerbLogger.getInstance().ERROR);
                    VerbLogger.getInstance().log(this.getClass(), ex.getMessage());
                    VerbLogger.getInstance().setLevel(VerbLogger.getInstance().getInitialLevel());
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBLoad = new javax.swing.JButton();
        jBCreate = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jBCancel = new javax.swing.JButton();
        jBTable = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create Tables");

        jBLoad.setText("Load SQL Script");
        jBLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadActionPerformed(evt);
            }
        });

        jBCreate.setText("Create");
        jBCreate.setEnabled(false);
        jBCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCreateActionPerformed(evt);
            }
        });

        jBCancel.setText("No");
        jBCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelActionPerformed(evt);
            }
        });

        jBTable.setText("Add Table");
        jBTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTableActionPerformed(evt);
            }
        });

        jLabel1.setText("Adding tables to the openned schema");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBLoad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 371, Short.MAX_VALUE)
                        .addComponent(jBCreate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCreate)
                    .addComponent(jBCancel)
                    .addComponent(jBLoad)
                    .addComponent(jBTable))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadActionPerformed
        FileChooser fileChooser = new FileChooser(parent, true, new FileNameExtensionFilter("SQL File (*.sql)", "sql"));
        fileChooser.getjFileChooser1().setMultiSelectionEnabled(true);
        fileChooser.getjFileChooser1().setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
        fileChooser.setVisible(true);
        if (!fileChooser.isCancelled()) {
            for (File f : fileChooser.getjFileChooser1().getSelectedFiles()) {
                try {
                    sQLEditorPanel = new SQLEditorPanel(jTabbedPane1, wHDBMSFactory);
                    sQLEditorPanel.openSQLFile(f);
                    sQLEditorPanel.setVisible();
                    jBCreate.setEnabled(true);
                    jBLoad.setVisible(false);
                    jBCancel.setText("Cancel");
                } catch (IOException ex) {
                    int type = JOptionPane.ERROR_MESSAGE;
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", type);
                }

            }
        }
    }//GEN-LAST:event_jBLoadActionPerformed

    private class CreateThread extends SwingWorker<Void, Void> {
        
        @Override
        protected Void doInBackground() throws Exception {
            dialog.toFront();
            dialog.getjProgressBar().setIndeterminate(true);
            dialog.getjProgressBar().repaint();
            dialog.getjLProgress().setText("Running the SQL Script");
            dialog.getjLProgress().repaint();
            dialog.setLocationRelativeTo(parent);
            dialog.setVisible(true);
            int i = 0;
            List<String> lineList = sQLEditorPanel.getAllSQL();
            dialog.getjProgressBar().setIndeterminate(false);
            dialog.getjProgressBar().setValue(0);
            dialog.getjProgressBar().repaint();
            setVisible(false);
            for (String line : lineList) {
                try {
                    wHDBMSFactory.executeUpdate(line);
                    int progress = (i++) * 100 / lineList.size();
                    dialog.getjProgressBar().setValue(progress);
                    dialog.getjLProgress().setText("Creating table: " + i);
                    dialog.getjProgressBar().repaint();
                    dialog.getjLProgress().repaint();
                } catch (SQLException ex) {
                    int type = JOptionPane.ERROR_MESSAGE;
                    JOptionPane.showMessageDialog(parent, ex.getMessage(), "Error", type);
                }
            }
            dialog.getjProgressBar().setValue(0);
            dialog.getjLProgress().setText(null);
            dialog.getjProgressBar().repaint();
            dialog.getjLProgress().repaint();
            dialog.dispose();
            return null;
        }

        @Override
        protected void done() {
            ResultPanelFactory.getInstance().getsQLTableViewPanel().addObject(wHDBMSFactory.getMainURLParsed(), wHDBMSFactory);
            ResultPanelFactory.getInstance().getsQLTableViewPanel().collapsePathFromLevel(2);
        }
    }

    private void jBCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCreateActionPerformed
        CreateThread thread = new CreateThread();
        thread.execute();
        dispose();
    }//GEN-LAST:event_jBCreateActionPerformed

    private void jBTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTableActionPerformed
        CreateTable table = new CreateTable(parent, true, wHDBMSFactory);
        table.setLocationRelativeTo(this);
        table.setVisible(true);
        if (!table.isCancel()) {
            if (sQLEditorPanel == null) {
                sQLEditorPanel = new SQLEditorPanel(jTabbedPane1, wHDBMSFactory);
            }
            sQLEditorPanel.insertOnCaretPosition(table.getSqlFormat());
            sQLEditorPanel.setVisible();
            jBCreate.setEnabled(true);
            jBLoad.setVisible(false);
            jBCancel.setText("Cancel");

        }
    }//GEN-LAST:event_jBTableActionPerformed

    private void jBCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jBCancelActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancel;
    private javax.swing.JButton jBCreate;
    private javax.swing.JButton jBLoad;
    private javax.swing.JButton jBTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    private Frame parent;
    private SQLEditorPanel sQLEditorPanel;
    private WHDBMSFactory wHDBMSFactory;
}

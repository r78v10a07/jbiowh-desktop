package org.jbiowhdesktop;

import java.io.*;
import java.sql.SQLException;
import java.util.List;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultEditorKit;
import org.jbiowhcore.logger.VerbLogger;
import org.jbiowhdbms.dbms.JBioWHDBMS;
import org.jbiowhdbms.dbms.WHDBMSFactory;
import org.jbiowhdesktop.actions.jbiowh.CloseActionListener;
import org.jbiowhdesktop.actions.jbiowh.MSLoadXMLActionListener;
import org.jbiowhdesktop.actions.jbiowh.OpenActionListener;
import org.jbiowhdesktop.actions.jbiowh.SaveActionListener;
import org.jbiowhdesktop.component.file.FileChooser;
import org.jbiowhdesktop.component.graph.EntityRelationshipDialog;
import org.jbiowhdesktop.component.panel.ConstrainPanel;
import org.jbiowhdesktop.component.panel.HomePanel;
import org.jbiowhdesktop.component.panel.SearchPanel;
import org.jbiowhdesktop.component.panel.list.AbstractListView;
import org.jbiowhdesktop.component.panel.result.ResultPanel;
import org.jbiowhdesktop.component.panel.result.ResultPanelFactory;
import org.jbiowhdesktop.component.panel.sql.SQLBrowsePanel;
import org.jbiowhdesktop.component.panel.sql.SQLEditorPanel;
import org.jbiowhdesktop.component.panel.sql.SQLTableViewPanel;
import org.jbiowhdesktop.save.SaveToFile;
import org.jbiowhpersistence.utils.entitymanager.JBioWHPersistence;

/**
 * This JFrame is the main Frame on the JBioWH Desktop tool
 *
 * $Author: r78v10a07@gmail.com $ $LastChangedDate: 2012-09-18 14:59:00 +0200
 * (Tue, 18 Sep 2012) $ $LastChangedRevision: 664 $
 *
 * @since Feb 9, 2012
 */
public class JBioWH extends javax.swing.JFrame {

    /**
     * Creates new form JBioWH
     */
    public JBioWH() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jBOpen = new javax.swing.JButton();
        jBClose = new javax.swing.JButton();
        jBSearch = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        ResultPanelFactory.getInstance().setResultPanel(new ResultPanel(jTabbedPane2));
        ResultPanelFactory.getInstance().setsQLTableViewPanel(new SQLTableViewPanel(jTabbedPane2));
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMOpenSQLScript = new javax.swing.JMenuItem();
        jMSaveSQLScript = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMExit = new javax.swing.JMenuItem();
        jMEdit = new javax.swing.JMenu();
        jMUndo = new javax.swing.JMenuItem();
        jMRedo = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMCut = new javax.swing.JMenuItem();
        jMCopy = new javax.swing.JMenuItem();
        jMPaste = new javax.swing.JMenuItem();
        jMTabs = new javax.swing.JMenu();
        jMSave = new javax.swing.JMenuItem();
        jMSaveToFile = new javax.swing.JMenuItem();
        jMCloseCurrent = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMHome = new javax.swing.JMenuItem();
        jMSearch = new javax.swing.JMenuItem();
        jMConstrains = new javax.swing.JMenuItem();
        jMSQLEditor = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMCloseAllTabs = new javax.swing.JMenuItem();
        jMCloseAllList = new javax.swing.JMenuItem();
        jMCloseAllSearch = new javax.swing.JMenuItem();
        jMCloseAllConst = new javax.swing.JMenuItem();
        jMCloseAllQueryEditor = new javax.swing.JMenuItem();
        jMCloseAllQueryResults = new javax.swing.JMenuItem();
        jMSchema = new javax.swing.JMenu();
        jMOpen = new javax.swing.JMenuItem();
        jMClose = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMCreateSchema = new javax.swing.JMenuItem();
        jMSQL = new javax.swing.JMenu();
        jMCurrent = new javax.swing.JMenuItem();
        jMSelection = new javax.swing.JMenuItem();
        jMAll = new javax.swing.JMenuItem();
        jMMSTool = new javax.swing.JMenu();
        jMLoadXML = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMViewRelationship = new javax.swing.JMenuItem();
        jMAbout = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JBioWH Desktop Client");

        jToolBar1.setRollover(true);

        jBOpen.setText("Open");
        jBOpen.setToolTipText("Open WHDB");
        jBOpen.setFocusable(false);
        jBOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBOpen.addActionListener(new OpenActionListener(this, false));
        jToolBar1.add(jBOpen);

        jBClose.setText("Close");
        jBClose.setToolTipText("Close WHDB");
        jBClose.setFocusable(false);
        jBClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBClose.addActionListener(new CloseActionListener(this));
        jBClose.setVisible(false);
        jToolBar1.add(jBClose);

        jBSearch.setText("Search");
        jBSearch.setFocusable(false);
        jBSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBSearch.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSearchActionPerformed(evt);
            }
        });        
        jBSearch.setVisible(false);
        jToolBar1.add(jBSearch);

        jTabbedPane1.addTab("Schemas", ResultPanelFactory.getInstance().getsQLTableViewPanel());
        jTabbedPane1.addTab("Result", ResultPanelFactory.getInstance().getResultPanel());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jMenu1.setText("File");

        jMOpenSQLScript.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMOpenSQLScript.setText("Open SQL Script");
        jMOpenSQLScript.setEnabled(false);
        jMOpenSQLScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMOpenSQLScriptActionPerformed(evt);
            }
        });
        jMenu1.add(jMOpenSQLScript);

        jMSaveSQLScript.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMSaveSQLScript.setText("Save SQL Script");
        jMSaveSQLScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSaveSQLScriptActionPerformed(evt);
            }
        });
        jMenu1.add(jMSaveSQLScript);
        jMenu1.add(jSeparator4);

        jMExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMExit.setText("Exit");
        jMExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMExit);

        jMenuBar1.add(jMenu1);

        jMEdit.setText("Edit");
        jMEdit.setEnabled(false);

        jMUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMUndo.setText("Undo");
        jMUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMUndoActionPerformed(evt);
            }
        });
        jMEdit.add(jMUndo);

        jMRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMRedo.setText("Redo");
        jMRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRedoActionPerformed(evt);
            }
        });
        jMEdit.add(jMRedo);
        jMEdit.add(jSeparator6);

        jMCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMCut.setText("Cut");
        jMCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCutActionPerformed(evt);
            }
        });
        jMEdit.add(jMCut);

        jMCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMCopy.setText("Copy");
        jMCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCopyActionPerformed(evt);
            }
        });
        jMEdit.add(jMCopy);

        jMPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMPaste.setText("Paste");
        jMPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMPasteActionPerformed(evt);
            }
        });
        jMEdit.add(jMPaste);

        jMenuBar1.add(jMEdit);

        jMTabs.setText("Tabs");
        jMTabs.setEnabled(false);

        jMSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMSave.setText("Save Current Tab");
        jMSave.addActionListener(new SaveActionListener(this));
        jMTabs.add(jMSave);

        jMSaveToFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMSaveToFile.setText("Save Current Tab to File");
        jMSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSaveToFileActionPerformed(evt);
            }
        });
        jMTabs.add(jMSaveToFile);

        jMCloseCurrent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMCloseCurrent.setText("Close Current Tab");
        jMCloseCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseCurrentActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseCurrent);
        jMTabs.add(jSeparator2);

        jMHome.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMHome.setText("Home");
        jMHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMHomeActionPerformed(evt);
            }
        });
        jMTabs.add(jMHome);

        jMSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMSearch.setText("New Search");
        jMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSearchActionPerformed(evt);
            }
        });
        jMTabs.add(jMSearch);

        jMConstrains.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMConstrains.setText("New Constrains");
        jMConstrains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMConstrainsActionPerformed(evt);
            }
        });
        jMTabs.add(jMConstrains);

        jMSQLEditor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMSQLEditor.setText("New Query");
        jMSQLEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSQLEditorActionPerformed(evt);
            }
        });
        jMTabs.add(jMSQLEditor);
        jMTabs.add(jSeparator3);

        jMCloseAllTabs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllTabs.setText("Close All");
        jMCloseAllTabs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllTabsActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllTabs);

        jMCloseAllList.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllList.setText("Close All List");
        jMCloseAllList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllListActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllList);

        jMCloseAllSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllSearch.setText("Close All Search");
        jMCloseAllSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllSearchActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllSearch);

        jMCloseAllConst.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllConst.setText("Close All Constrains");
        jMCloseAllConst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllConstActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllConst);

        jMCloseAllQueryEditor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllQueryEditor.setText("Close All Query Editors");
        jMCloseAllQueryEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllQueryEditorActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllQueryEditor);

        jMCloseAllQueryResults.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMCloseAllQueryResults.setText("Close All Query Results");
        jMCloseAllQueryResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCloseAllQueryResultsActionPerformed(evt);
            }
        });
        jMTabs.add(jMCloseAllQueryResults);

        jMenuBar1.add(jMTabs);

        jMSchema.setText("Schema");

        jMOpen.setText("Open");
        jMOpen.setToolTipText("Open WHDB");
        jMOpen.addActionListener(new OpenActionListener(this, false, false));
        jMSchema.add(jMOpen);

        jMClose.setText("Close");
        jMClose.setToolTipText("Close WHDB");
        jMClose.setEnabled(false);
        jMClose.addActionListener(new CloseActionListener(this));
        jMSchema.add(jMClose);
        jMSchema.add(jSeparator5);

        jMCreateSchema.setText("Create a new Schema");
        jMCreateSchema.addActionListener(new OpenActionListener(this, true, false));
        jMSchema.add(jMCreateSchema);

        jMenuBar1.add(jMSchema);

        jMSQL.setText("Query");
        jMSQL.setEnabled(false);

        jMCurrent.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_MASK));
        jMCurrent.setText("Execute Current Statement");
        jMCurrent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCurrentActionPerformed(evt);
            }
        });
        jMSQL.add(jMCurrent);

        jMSelection.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMSelection.setText("Execute Selection");
        jMSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSelectionActionPerformed(evt);
            }
        });
        jMSQL.add(jMSelection);

        jMAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMAll.setText("Execute All");
        jMAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMAllActionPerformed(evt);
            }
        });
        jMSQL.add(jMAll);

        jMenuBar1.add(jMSQL);

        jMMSTool.setText("MS Tool");
        jMMSTool.setEnabled(false);

        jMLoadXML.setText("Load XML");
        jMLoadXML.addActionListener(new MSLoadXMLActionListener(this));
        jMMSTool.add(jMLoadXML);

        jMenuBar1.add(jMMSTool);

        jMenu3.setText("Help");

        jMViewRelationship.setText("View modules relationship");
        jMViewRelationship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMViewRelationshipActionPerformed(evt);
            }
        });
        jMenu3.add(jMViewRelationship);

        jMAbout.setText("About");
        jMAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMAboutActionPerformed(evt);
            }
        });
        jMenu3.add(jMAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)
                    .addComponent(jSeparator1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMExitActionPerformed
        try {
            JBioWHPersistence.getInstance().closeAll();
            JBioWHDBMS.getInstance().closeAll();
        } catch (SQLException ex) {
            VerbLogger.getInstance().setLevel(VerbLogger.getInstance().ERROR);
            VerbLogger.getInstance().log(this.getClass(), ex.getMessage());
        }
        System.exit(0);
    }//GEN-LAST:event_jMExitActionPerformed

    private void jMAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAboutActionPerformed
        JDialog about = new About(this, true);
        about.setLocationRelativeTo(this);
        about.toFront();
        about.setVisible(true);
    }//GEN-LAST:event_jMAboutActionPerformed

    private void jMHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMHomeActionPerformed
        viewHomeTabbedPanel(null);
    }//GEN-LAST:event_jMHomeActionPerformed

    private void jMCloseAllTabsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllTabsActionPerformed
        jTabbedPane2.removeAll();
    }//GEN-LAST:event_jMCloseAllTabsActionPerformed

    private void jMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSearchActionPerformed
        SearchPanel searchPanel = new SearchPanel(jTabbedPane2);
        searchPanel.setVisible();
    }//GEN-LAST:event_jMSearchActionPerformed

    private void jMCloseAllListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllListActionPerformed
        for (int i = 0; i < jTabbedPane2.getTabCount(); i++) {
            if (jTabbedPane2.getComponentAt(i) instanceof AbstractListView) {
                jTabbedPane2.remove(jTabbedPane2.getComponentAt(i));
                i = 0;
            }
        }
    }//GEN-LAST:event_jMCloseAllListActionPerformed

    private void jMCloseAllSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllSearchActionPerformed
        for (int i = 0; i < jTabbedPane2.getTabCount(); i++) {
            if (jTabbedPane2.getComponentAt(i) instanceof SearchPanel) {
                jTabbedPane2.remove(i);
                i = 0;
            }
        }
    }//GEN-LAST:event_jMCloseAllSearchActionPerformed

    private void jMConstrainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMConstrainsActionPerformed
        ConstrainPanel constPanel = new ConstrainPanel(jTabbedPane2);
        constPanel.setVisible();
    }//GEN-LAST:event_jMConstrainsActionPerformed

    private void jMCloseAllConstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllConstActionPerformed
        for (int i = 0; i < jTabbedPane2.getTabCount(); i++) {
            if (jTabbedPane2.getComponentAt(i) instanceof ConstrainPanel) {
                jTabbedPane2.remove(i);
                i = 0;
            }
        }
    }//GEN-LAST:event_jMCloseAllConstActionPerformed

    private void jMSQLEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSQLEditorActionPerformed
        SQLEditorPanel sQLEditorPanel = new SQLEditorPanel(jTabbedPane2, JBioWHDBMS.getInstance().getWhdbmsFactory());
        sQLEditorPanel.setVisible();

    }//GEN-LAST:event_jMSQLEditorActionPerformed

    private void jMAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAllActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            SQLEditorPanel sQLEditorPanel = (SQLEditorPanel) jTabbedPane2.getSelectedComponent();
            WHDBMSFactory wHDBMSFactory = JBioWHDBMS.getInstance().getWhdbmsFactory();
            try {
                List<List> results = wHDBMSFactory.executeMultipleSQLSelect(sQLEditorPanel.getAllSQL(), 0, 1000);
                for (List result : results) {
                    SQLBrowsePanel browsePanel = new SQLBrowsePanel("from Multiple", result, jTabbedPane2);
                    browsePanel.setVisible();
                }
            } catch (SQLException ex) {
                int type = JOptionPane.ERROR_MESSAGE;
                JOptionPane.showMessageDialog(jTabbedPane2, ex.getMessage(), "SQL Error", type);
            }
        } else {
            int type = JOptionPane.INFORMATION_MESSAGE;
            JOptionPane.showMessageDialog(jTabbedPane2, "The current Tab is not a SQLEditor", "Information", type);
        }
    }//GEN-LAST:event_jMAllActionPerformed

    private void jMCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCurrentActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            SQLEditorPanel sQLEditorPanel = (SQLEditorPanel) jTabbedPane2.getSelectedComponent();
            WHDBMSFactory wHDBMSFactory = JBioWHDBMS.getInstance().getWhdbmsFactory();

            SQLBrowsePanel browsePanel;
            try {
                browsePanel = new SQLBrowsePanel("from Current",
                        wHDBMSFactory.executeSingleSQLSelect(sQLEditorPanel.getCurrentSQLLine(), 0, 1000),
                        jTabbedPane2);
                browsePanel.setVisible();
            } catch (SQLException ex) {
                int type = JOptionPane.ERROR_MESSAGE;
                JOptionPane.showMessageDialog(jTabbedPane2, ex.getMessage(), "SQL Error", type);
            }

        } else {
            int type = JOptionPane.INFORMATION_MESSAGE;
            JOptionPane.showMessageDialog(jTabbedPane2, "The current Tab is not a SQLEditor", "Information", type);
        }
    }//GEN-LAST:event_jMCurrentActionPerformed

    private void jMCloseAllQueryEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllQueryEditorActionPerformed
        for (int i = 0; i < jTabbedPane2.getTabCount(); i++) {
            if (jTabbedPane2.getComponentAt(i) instanceof SQLEditorPanel) {
                jTabbedPane2.remove(i);
                i = 0;
            }
        }
    }//GEN-LAST:event_jMCloseAllQueryEditorActionPerformed

    private void jMSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSelectionActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            SQLEditorPanel sQLEditorPanel = (SQLEditorPanel) jTabbedPane2.getSelectedComponent();
            WHDBMSFactory wHDBMSFactory = JBioWHDBMS.getInstance().getWhdbmsFactory();
            try {
                List<List> results = wHDBMSFactory.executeMultipleSQLSelect(sQLEditorPanel.getSQLSelection(), 0, 1000);
                for (List result : results) {
                    SQLBrowsePanel browsePanel = new SQLBrowsePanel("from Selection", result, jTabbedPane2);
                    browsePanel.setVisible();
                }
            } catch (SQLException ex) {
                int type = JOptionPane.ERROR_MESSAGE;
                JOptionPane.showMessageDialog(jTabbedPane2, ex.getMessage(), "SQL Error", type);
            }
        } else {
            int type = JOptionPane.INFORMATION_MESSAGE;
            JOptionPane.showMessageDialog(jTabbedPane2, "The current Tab is not a SQLEditor", "Information", type);
        }
    }//GEN-LAST:event_jMSelectionActionPerformed

    private void jMCloseAllQueryResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseAllQueryResultsActionPerformed
        for (int i = 0; i < jTabbedPane2.getTabCount(); i++) {
            if (jTabbedPane2.getComponentAt(i) instanceof SQLBrowsePanel) {
                jTabbedPane2.remove(i);
                i = 0;
            }
        }
    }//GEN-LAST:event_jMCloseAllQueryResultsActionPerformed

    private void jMCloseCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCloseCurrentActionPerformed
        jTabbedPane2.remove(jTabbedPane2.getSelectedIndex());
    }//GEN-LAST:event_jMCloseCurrentActionPerformed

    private void jMUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMUndoActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            ((SQLEditorPanel) jTabbedPane2.getSelectedComponent()).getUndoAction().actionPerformed(evt);
        }
    }//GEN-LAST:event_jMUndoActionPerformed

    private void jMRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRedoActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            ((SQLEditorPanel) jTabbedPane2.getSelectedComponent()).getRedoAction().actionPerformed(evt);
        }
    }//GEN-LAST:event_jMRedoActionPerformed

    private void jMCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCutActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            for (Action a : ((SQLEditorPanel) jTabbedPane2.getSelectedComponent()).getjSQLEditor().getActions()) {
                if (a.getValue(Action.NAME).equals(DefaultEditorKit.cutAction)) {
                    a.actionPerformed(evt);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jMCutActionPerformed

    private void jMCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCopyActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            for (Action a : ((SQLEditorPanel) jTabbedPane2.getSelectedComponent()).getjSQLEditor().getActions()) {
                if (a.getValue(Action.NAME).equals(DefaultEditorKit.copyAction)) {
                    a.actionPerformed(evt);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jMCopyActionPerformed

    private void jMPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMPasteActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            for (Action a : ((SQLEditorPanel) jTabbedPane2.getSelectedComponent()).getjSQLEditor().getActions()) {
                if (a.getValue(Action.NAME).equals(DefaultEditorKit.pasteAction)) {
                    a.actionPerformed(evt);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jMPasteActionPerformed

    private void jMOpenSQLScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMOpenSQLScriptActionPerformed
        FileChooser fileChooser = new FileChooser(this, true, new FileNameExtensionFilter("SQL File (*.sql)", "sql"));
        fileChooser.getjFileChooser1().setMultiSelectionEnabled(true);
        fileChooser.getjFileChooser1().setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
        fileChooser.setVisible(true);
        if (!fileChooser.isCancelled()) {
            for (File f : fileChooser.getjFileChooser1().getSelectedFiles()) {
                SQLEditorPanel sQLEditorPanel;
                try {
                    sQLEditorPanel = new SQLEditorPanel(jTabbedPane2, JBioWHDBMS.getInstance().getWhdbmsFactory());
                    sQLEditorPanel.openSQLFile(f);
                    sQLEditorPanel.setVisible();
                } catch (IOException ex) {
                    int type = JOptionPane.ERROR_MESSAGE;
                    JOptionPane.showMessageDialog(jTabbedPane2, ex.getMessage(), "Error", type);
                }

            }
        }
    }//GEN-LAST:event_jMOpenSQLScriptActionPerformed

    private void jMSaveSQLScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSaveSQLScriptActionPerformed
        if (jTabbedPane2.getSelectedComponent() instanceof SQLEditorPanel) {
            PrintWriter writer = null;
            try {
                SQLEditorPanel editor = (SQLEditorPanel) jTabbedPane2.getSelectedComponent();
                FileChooser fileChooser = new FileChooser(this, true, new FileNameExtensionFilter("SQL File (*.sql)", "sql"));
                fileChooser.setVisible(true);
                if (!fileChooser.isCancelled()) {
                    writer = new PrintWriter(new BufferedWriter(new FileWriter(fileChooser.getjFileChooser1().getSelectedFile())));
                    writer.printf(editor.getjSQLEditor().getText());
                }
            } catch (IOException ex) {
                int type = JOptionPane.ERROR_MESSAGE;
                JOptionPane.showMessageDialog(jTabbedPane2, ex.getMessage(), "Error", type);
            } finally {
                if (writer != null) {
                    writer.close();
                }
            }
        }
    }//GEN-LAST:event_jMSaveSQLScriptActionPerformed

    private void jMSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSaveToFileActionPerformed
        SaveToFile saveToFile = new SaveToFile(jTabbedPane2.getSelectedComponent());
        saveToFile.save();
    }//GEN-LAST:event_jMSaveToFileActionPerformed

    private void jMViewRelationshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMViewRelationshipActionPerformed
        if (JBioWHPersistence.getInstance().getWHEntityManager() != null) {
            EntityRelationshipDialog dialog = new EntityRelationshipDialog(this, false);
            dialog.setVisible(true);
        } else {
            int type = JOptionPane.ERROR_MESSAGE;
            JOptionPane.showMessageDialog(null, "Connect to a JBioWH database", "Connection Error", type);
        }
    }//GEN-LAST:event_jMViewRelationshipActionPerformed

    public void viewHomeTabbedPanel(WHDBMSFactory whdbmsFactory) {
        HomePanel homePanel = new HomePanel(jTabbedPane2, whdbmsFactory);
        homePanel.setVisible();
    }

    public JMenuItem getjMOpenSQLScript() {
        return jMOpenSQLScript;
    }

    public JButton getjBClose() {
        return jBClose;
    }

    public JMenuItem getjMClose() {
        return jMClose;
    }

    public JButton getjBSearch() {
        return jBSearch;
    }

    public JMenu getjMTabs() {
        return jMTabs;
    }

    public JMenu getjMEdit() {
        return jMEdit;
    }

    public JMenu getjMSQL() {
        return jMSQL;
    }

    public JMenuItem getjMOpen() {
        return jMOpen;
    }

    public JButton getjBOpen() {
        return jBOpen;
    }

    public JTabbedPane getjTabbedPane2() {
        return jTabbedPane2;
    }

    public JMenu getjMMSTool() {
        return jMMSTool;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JBioWH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JBioWH().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBClose;
    private javax.swing.JButton jBOpen;
    private javax.swing.JButton jBSearch;
    private javax.swing.JMenuItem jMAbout;
    private javax.swing.JMenuItem jMAll;
    private javax.swing.JMenuItem jMClose;
    private javax.swing.JMenuItem jMCloseAllConst;
    private javax.swing.JMenuItem jMCloseAllList;
    private javax.swing.JMenuItem jMCloseAllQueryEditor;
    private javax.swing.JMenuItem jMCloseAllQueryResults;
    private javax.swing.JMenuItem jMCloseAllSearch;
    private javax.swing.JMenuItem jMCloseAllTabs;
    private javax.swing.JMenuItem jMCloseCurrent;
    private javax.swing.JMenuItem jMConstrains;
    private javax.swing.JMenuItem jMCopy;
    private javax.swing.JMenuItem jMCreateSchema;
    private javax.swing.JMenuItem jMCurrent;
    private javax.swing.JMenuItem jMCut;
    private javax.swing.JMenu jMEdit;
    private javax.swing.JMenuItem jMExit;
    private javax.swing.JMenuItem jMHome;
    private javax.swing.JMenuItem jMLoadXML;
    private javax.swing.JMenu jMMSTool;
    private javax.swing.JMenuItem jMOpen;
    private javax.swing.JMenuItem jMOpenSQLScript;
    private javax.swing.JMenuItem jMPaste;
    private javax.swing.JMenuItem jMRedo;
    private javax.swing.JMenu jMSQL;
    private javax.swing.JMenuItem jMSQLEditor;
    private javax.swing.JMenuItem jMSave;
    private javax.swing.JMenuItem jMSaveSQLScript;
    private javax.swing.JMenuItem jMSaveToFile;
    private javax.swing.JMenu jMSchema;
    private javax.swing.JMenuItem jMSearch;
    private javax.swing.JMenuItem jMSelection;
    private javax.swing.JMenu jMTabs;
    private javax.swing.JMenuItem jMUndo;
    private javax.swing.JMenuItem jMViewRelationship;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}

package org.jbiowhdesktop.component.file;

import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * This JDialog is the file chooser option
 *
 * $Author: r78v10a07@gmail.com $ $LastChangedDate: 2012-08-31 15:46:36 +0200
 * (Fri, 31 Aug 2012) $ $LastChangedRevision: 396 $
 * @since May 28, 2012
 */
public class FileChooser extends javax.swing.JDialog {

    private int status = JFileChooser.APPROVE_OPTION;

    /**
     * Creates new form FileChooser
     *
     * @param parent the Frame from which the dialog is displayed
     * @param modal specifies whether dialog blocks user input to other
     * top-level windows when shown. If true, the modality type property is set
     * to DEFAULT_MODALITY_TYPE, otherwise the dialog is modeless.
     * @param extensionFilter the file extension
     */
    public FileChooser(java.awt.Frame parent, boolean modal, FileNameExtensionFilter extensionFilter) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        jFileChooser1.setFileFilter(extensionFilter);
    }

    /**
     * Creates new form FileChooser
     *
     * @param parent the Frame from which the dialog is displayed
     * @param modal specifies whether dialog blocks user input to other
     * top-level windows when shown. If true, the modality type property is set
     * to DEFAULT_MODALITY_TYPE, otherwise the dialog is modeless.
     * @param extensionFilter a list of file extension
     */
    public FileChooser(java.awt.Frame parent, boolean modal, List<FileNameExtensionFilter> extensionFilter) {
        super(parent, modal);
        initComponents();
        if (extensionFilter.size() == 1) {
            jFileChooser1.setFileFilter(extensionFilter.get(0));
        } else {
            for (FileNameExtensionFilter ext : extensionFilter) {
                jFileChooser1.addChoosableFileFilter(ext);
                jFileChooser1.setFileFilter(ext);
            }

        }
    }

    /**
     * Get the JFileChooser component
     *
     * @return a JFileChooser component
     */
    public JFileChooser getjFileChooser1() {
        return jFileChooser1;
    }

    /**
     * Get the JFileChooser status
     *
     * @return the JFileChooser status
     */
    public boolean isCancelled() {
        if (status == JFileChooser.APPROVE_OPTION) {
            return true;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jFileChooser1.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void close(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close
        status = JFileChooser.CANCEL_OPTION;
        dispose();
    }//GEN-LAST:event_close
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
}

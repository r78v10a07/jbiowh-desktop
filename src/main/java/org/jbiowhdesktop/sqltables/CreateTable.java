package org.jbiowhdesktop.sqltables;

import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import org.jbiowhdbms.dbms.JBioWHDBMS;
import org.jbiowhdbms.dbms.sql.table.SQLTable;
import org.jbiowhdbms.dbms.sql.table.SQLTableColumn;
import org.jbiowhdbms.dbms.sql.table.SQLTableIndex;
import org.jbiowhdesktop.component.popup.PopupCreateTable;
import org.jbiowhdesktop.component.table.model.CreateTableColumnModel;
import org.jbiowhdesktop.component.table.model.CreateTableIndexModel;
import org.jbiowhdesktop.component.table.model.CreateTableModel;
import org.jbiowhdesktop.sqltables.exception.SQLTableException;
import org.jbiowhdesktop.sqltables.listener.CreateTableColumnListener;
import org.jbiowhdesktop.sqltables.listener.CreateTableIndexlListener;
import org.jbiowhdesktop.sqltables.listener.CreateTableListener;
import org.jbiowhdesktop.sqltables.listener.DataTypeComboBoxEditor;

/**
 * This JDialog handled the SQL table creation process
 *
 * $Author: r78v10a07@gmail.com $
 * $LastChangedDate: 2012-08-31 15:46:36 +0200 (Fri, 31 Aug 2012) $
 * $LastChangedRevision: 231 $
 * @since Aug 1, 2012
 */
public class CreateTable extends javax.swing.JDialog {

    /**
     * Creates new form CreateTable
     * @param parent
     * @param modal
     * @param whdbms
     */
    public CreateTable(java.awt.Frame parent, boolean modal, JBioWHDBMS whdbms) {
        super(parent, modal);
        sqlTable = new SQLTable();
        dataTypes = whdbms.getDBMSDataTypes().toArray();
        indexTypes = whdbms.getDBMSIndexTypes();
        initComponents();
        
        
    }
    
    public String getSqlFormat() {
        return sqlFormat;
    }
    
    public boolean isCancel() {
        return cancel;
    }
    
    private void showPopup(MouseEvent evt, JTable table) {
        if (evt.isPopupTrigger()) {
            (new PopupCreateTable(jTabbedPane1, table)).show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTName = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTColumns = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTIndex = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTIndexColumn = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jBCancel = new javax.swing.JButton();
        jBCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create table");
        setResizable(false);

        jLabel1.setText("Table Name:");

        jTColumns.setModel(new CreateTableModel(new String[]{"Column Name", "Datatype", "PK", "NN", "UQ", "AI", "Default"}, sqlTable,
            new Class[]{java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class},
            new boolean[]{true, false, false, false, false, false, false}));
    jTColumns.setFillsViewportHeight(true);
    jTColumns.setGridColor(new java.awt.Color(240, 240, 240));
    jTColumns.setName("Column"); // NOI18N
    jTColumns.getTableHeader().setReorderingAllowed(false);
    JComboBox datatype = new JComboBox(dataTypes);
    datatype.setEditable(true);
    datatype.setPreferredSize(new Dimension(datatype.getPreferredSize().width, 22));
    datatype.setEditor(new DataTypeComboBoxEditor(new Dimension(datatype.getPreferredSize().width,
        datatype.getPreferredSize().height - 6)));
TableColumn fieldColumn = jTColumns.getColumnModel().getColumn(1);
fieldColumn.setCellEditor(new DefaultCellEditor(datatype));
DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
renderer.setToolTipText("Click for combo box");
fieldColumn.setCellRenderer(renderer);
jTColumns.setRowHeight(datatype.getPreferredSize().height);
jTColumns.getColumnModel().getColumn(0).setMinWidth(300);
jTColumns.getColumnModel().getColumn(0).setPreferredWidth(300);
jTColumns.getColumnModel().getColumn(0).setMaxWidth(300);
jTColumns.getColumnModel().getColumn(1).setMinWidth(120);
jTColumns.getColumnModel().getColumn(1).setPreferredWidth(120);
jTColumns.getColumnModel().getColumn(1).setMaxWidth(120);
for (int i = 2; i < 6; i++) {
jTColumns.getColumnModel().getColumn(i).setMinWidth(30);
jTColumns.getColumnModel().getColumn(i).setPreferredWidth(30);
jTColumns.getColumnModel().getColumn(i).setMaxWidth(30);
}
jTColumns.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseReleased(java.awt.event.MouseEvent evt) {
        jTColumnsMouseReleased(evt);
    }
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTColumnsMouseClicked(evt);
    }
    public void mousePressed(java.awt.event.MouseEvent evt) {
        jTColumnsMousePressed(evt);
    }
    });
    jScrollPane2.setViewportView(jTColumns);
    jTColumns.getColumnModel().getColumn(0).setResizable(false);
    jTColumns.getColumnModel().getColumn(0).setPreferredWidth(430);
    jTColumns.getColumnModel().getColumn(1).setPreferredWidth(150);
    jTColumns.getColumnModel().getColumn(2).setResizable(false);
    jTColumns.getColumnModel().getColumn(2).setPreferredWidth(5);
    jTColumns.getColumnModel().getColumn(3).setResizable(false);
    jTColumns.getColumnModel().getColumn(3).setPreferredWidth(7);

    jTabbedPane1.addTab("Columns", jScrollPane2);

    jTIndex.setModel(new CreateTableIndexModel(new String[]{"Index Name", "Type"}, sqlTable,
        new Class[]{java.lang.Object.class, java.lang.Object.class},
        new boolean[]{true, false}));
jTIndex.setFillsViewportHeight(true);
jTIndex.setGridColor(new java.awt.Color(240, 240, 240));
jTIndex.setName("Index"); // NOI18N
JComboBox indextype = new JComboBox(indexTypes);
indextype.setEditable(true);
fieldColumn = jTIndex.getColumnModel().getColumn(1);
fieldColumn.setCellEditor(new DefaultCellEditor(indextype));
fieldColumn.setCellRenderer(renderer);
jTIndex.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTIndexMouseClicked(evt);
    }
    public void mousePressed(java.awt.event.MouseEvent evt) {
        jTIndexMousePressed(evt);
    }
    public void mouseReleased(java.awt.event.MouseEvent evt) {
        jTIndexMouseReleased(evt);
    }
    });
    jScrollPane3.setViewportView(jTIndex);

    jTIndexColumn.setModel(new CreateTableColumnModel(new String[]{"Column Name", "Order", "Length"}, sqlTable,
        new Class[]{java.lang.Object.class, java.lang.Object.class, java.lang.Object.class},
        new boolean[]{true, true, true}));
jTIndexColumn.setFillsViewportHeight(true);
jTIndexColumn.setGridColor(new java.awt.Color(240, 240, 240));
jTIndexColumn.setName("IndexColumn"); // NOI18N
jTColumnsIndex = new JComboBox();
fieldColumn = jTIndexColumn.getColumnModel().getColumn(0);
fieldColumn.setCellEditor(new DefaultCellEditor(jTColumnsIndex));
fieldColumn.setCellRenderer(renderer);
JComboBox indexColumntype = new JComboBox(indexOrder);
fieldColumn = jTIndexColumn.getColumnModel().getColumn(1);
fieldColumn.setCellEditor(new DefaultCellEditor(indexColumntype));
fieldColumn.setCellRenderer(renderer);
jTIndexColumn.getColumnModel().getColumn(0).setMinWidth(180);
jTIndexColumn.getColumnModel().getColumn(0).setPreferredWidth(180);
jTIndexColumn.getColumnModel().getColumn(0).setMaxWidth(180);
jTIndexColumn.getColumnModel().getColumn(1).setMinWidth(60);
jTIndexColumn.getColumnModel().getColumn(1).setPreferredWidth(60);
jTIndexColumn.getColumnModel().getColumn(1).setMaxWidth(60);
jTIndexColumn.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTIndexColumnMouseClicked(evt);
    }
    public void mousePressed(java.awt.event.MouseEvent evt) {
        jTIndexColumnMousePressed(evt);
    }
    public void mouseReleased(java.awt.event.MouseEvent evt) {
        jTIndexColumnMouseReleased(evt);
    }
    });
    jScrollPane4.setViewportView(jTIndexColumn);
    jTColumns.getModel().addTableModelListener(new CreateTableListener(jTabbedPane1, (CreateTableIndexModel) jTIndex.getModel()));
    jTIndex.getModel().addTableModelListener(new CreateTableIndexlListener((CreateTableColumnModel) jTIndexColumn.getModel()));
    jTIndexColumn.getModel().addTableModelListener(new CreateTableColumnListener(jTColumnsIndex));

    jLabel2.setText("Index Column");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addContainerGap())))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("Indexes", jPanel1);

    jTabbedPane1.setEnabledAt(1, false);

    jBCancel.setText("Cancel\n");
    jBCancel.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBCancelActionPerformed(evt);
        }
    });

    jBCreate.setText("Create");
    jBCreate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBCreateActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTName, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(jTabbedPane1)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jBCreate)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jBCancel)))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBCancel)
                .addComponent(jBCreate))
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTColumnsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTColumnsMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            CreateTableModel model = (CreateTableModel) jTColumns.getModel();
            model.addRow(null, null, false, false, false, false, null);
            evt.consume();
        }
    }//GEN-LAST:event_jTColumnsMouseClicked
    
    private void jTIndexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexMouseClicked
        CreateTableIndexModel model = (CreateTableIndexModel) jTIndex.getModel();
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            model.addRow(null, null);
            evt.consume();
        } else if (evt.getClickCount() == 1 && !evt.isConsumed()) {
            CreateTableColumnModel indexColumnModel = (CreateTableColumnModel) jTIndexColumn.getModel();
            int row = jTIndex.rowAtPoint(evt.getPoint());
            if (row != -1) {
                upDateColumnsIndex();
                indexColumnModel.setIndexName((String) model.getValueAt(row, 0));
            } else {
                indexColumnModel.setIndexName(null);
            }
        }
    }//GEN-LAST:event_jTIndexMouseClicked
    
    private void jTColumnsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTColumnsMousePressed
        showPopup(evt, jTColumns);
    }//GEN-LAST:event_jTColumnsMousePressed
    
    private void jTColumnsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTColumnsMouseReleased
        showPopup(evt, jTColumns);
    }//GEN-LAST:event_jTColumnsMouseReleased
    
    private void jTIndexMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexMousePressed
        showPopup(evt, jTIndex);
    }//GEN-LAST:event_jTIndexMousePressed
    
    private void jTIndexMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexMouseReleased
        showPopup(evt, jTIndex);
    }//GEN-LAST:event_jTIndexMouseReleased
    
    private void jBCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed
        cancel = true;
        dispose();
    }//GEN-LAST:event_jBCancelActionPerformed
    
    private void jBCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCreateActionPerformed
        try {
            sqlTable.setName(jTName.getText());
            sqlFormat = sqlTable.toSQLFormat();
            dispose();
        } catch (org.jbiowhdbms.dbms.sql.exception.SQLTableException ex) {
            int type = JOptionPane.ERROR_MESSAGE;
            JOptionPane.showMessageDialog(jTabbedPane1, ex.getMessage(), "SQL Table Error", type);
        }
    }//GEN-LAST:event_jBCreateActionPerformed
    
    private void jTIndexColumnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexColumnMouseClicked
        upDateColumnsIndex();
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            CreateTableColumnModel model = (CreateTableColumnModel) jTIndexColumn.getModel();
            model.addRow(null, (String) indexOrder[0]);
            evt.consume();
        }
    }//GEN-LAST:event_jTIndexColumnMouseClicked
    
    private void jTIndexColumnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexColumnMousePressed
        showPopup(evt, jTIndexColumn);
    }//GEN-LAST:event_jTIndexColumnMousePressed
    
    private void jTIndexColumnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTIndexColumnMouseReleased
        showPopup(evt, jTIndexColumn);
    }//GEN-LAST:event_jTIndexColumnMouseReleased
    
    private void upDateColumnsIndex() {
        CreateTableColumnModel model = (CreateTableColumnModel) jTIndexColumn.getModel();
        
        jTColumnsIndex.removeAllItems();
        if (model.getIndexName() != null) {
            SQLTableIndex ind = sqlTable.getIndexes().getIndex(model.getIndexName());
            if (ind != null) {
                for (SQLTableColumn col : sqlTable.getColumns().getColumnSet()) {
                    boolean flags = false;
                    for (String name : ind.getColumns().keySet()) {
                        if (col.getName().equals(name)) {
                            flags = true;
                        }
                    }
                    if (!flags) {
                        jTColumnsIndex.addItem(col.getName());
                    }
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancel;
    private javax.swing.JButton jBCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTColumns;
    private javax.swing.JTable jTIndex;
    private javax.swing.JTable jTIndexColumn;
    private javax.swing.JTextField jTName;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JComboBox jTColumnsIndex;
    private Object[] dataTypes;
    private Object[] indexTypes;
    private Object[] indexOrder = new String[]{"ASC", "DESC"};
    private SQLTable sqlTable;
    private boolean cancel = false;
    private String sqlFormat = null;
}
